{"ast":null,"code":"var _jsxFileName = \"/Users/zaitsev/Documents/pharo-gsoc/tmp/pharo-gsoc-ideas/src/components/IdeasPage/index.js\";\nimport $ from \"jquery\";\nimport React from 'react';\nimport * as URLS from '../../constants/urls';\nimport IdeaCard from './IdeaCard';\nimport IdeaModal from './IdeaModal';\nimport IdeasGrid from './IdeasGrid';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getContentsOfFileFromURL = url => {\n  var result = null;\n  $.ajax({\n    url: url,\n    type: 'get',\n    dataType: 'text',\n    async: false,\n    success: function (data) {\n      result = data;\n    }\n  });\n  return result;\n};\nconst getJsonFromURL = url => JSON.parse(getContentsOfFileFromURL(url));\nclass IdeasPage extends React.Component {\n  constructor() {\n    super();\n    this.ideas = getJsonFromURL(URLS.IDEAS_FILE);\n    this.supervisors = getJsonFromURL(URLS.SUPERVISORS_FILE);\n\n    // this.supervisors = this.supervisors\n    // .map(each => {\n    //   // Commented out because it is very slow :(\n\n    //   /*const githubUser = each.github ?\n    //     getJsonFromURL(`https://api.github.com/users/${each.github}`) :\n    //     null*/\n\n    //   const githubUser = null\n\n    //   const picture = githubUser ? githubUser.avatar_url : null\n    //   return { ...each, pictureUrl: picture }\n    // })\n\n    this.state = {\n      ideasToDisplay: this.ideas,\n      showDetailedIdeaView: false,\n      ideaToShowInDetailedView: null\n    };\n  }\n  showIdea(idea) {\n    this.setState({\n      showDetailedIdeaView: true,\n      ideaToShowInDetailedView: idea\n    });\n  }\n  closeDetailedIdeaView() {\n    this.setState({\n      showDetailedIdeaView: false\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Project Ideas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), chunk(this.ideas, 5).map((chunk, i) => /*#__PURE__*/_jsxDEV(IdeasGrid, {\n        children: chunk.map((idea, i) => /*#__PURE__*/_jsxDEV(IdeaCard, {\n          projectLogo: idea.img,\n          projectName: idea.title,\n          projectDescription: idea.goal,\n          onClick: () => this.showIdea(idea)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(IdeaModal, {\n        open: this.state.showDetailedIdeaView,\n        onClose: () => this.closeDetailedIdeaView(),\n        idea: this.state.ideaToShowInDetailedView,\n        translations: translationsEN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport function chunk(list, n) {\n  const copy = Array.from(list);\n  const result = [];\n  while (copy.length) {\n    result.push(copy.splice(0, n));\n  }\n  return result;\n}\nconst translationsEN = {\n  'context': 'Context',\n  'goal': 'Goal',\n  'mentors': 'Mentors',\n  'look': 'Look this project in',\n  'skills': 'Skills',\n  'required': 'Required',\n  'preferred': 'Preferred',\n  'timeSize': 'Size',\n  'expectedTime': '175 ~ 350 hour.',\n  'difficulty': 'Difficulty',\n  'Beginner': 'Beginner',\n  'Intermediate': 'Intermediate',\n  'Advanced': 'Advanced'\n};\nexport default IdeasPage;","map":{"version":3,"names":["$","React","URLS","IdeaCard","IdeaModal","IdeasGrid","getContentsOfFileFromURL","url","result","ajax","type","dataType","async","success","data","getJsonFromURL","JSON","parse","IdeasPage","Component","constructor","ideas","IDEAS_FILE","supervisors","SUPERVISORS_FILE","state","ideasToDisplay","showDetailedIdeaView","ideaToShowInDetailedView","showIdea","idea","setState","closeDetailedIdeaView","render","chunk","map","i","img","title","goal","translationsEN","list","n","copy","Array","from","length","push","splice"],"sources":["/Users/zaitsev/Documents/pharo-gsoc/tmp/pharo-gsoc-ideas/src/components/IdeasPage/index.js"],"sourcesContent":["import $ from \"jquery\"\nimport React from 'react'\nimport * as URLS from '../../constants/urls'\nimport IdeaCard from './IdeaCard'\nimport IdeaModal from './IdeaModal'\nimport IdeasGrid from './IdeasGrid'\nimport './style.css'\n\n\nconst getContentsOfFileFromURL = url => {\n  var result = null\n  $.ajax({\n    url: url,\n    type: 'get',\n    dataType: 'text',\n    async: false,\n    success: function (data) {\n      result = data\n    }\n  })\n  return result\n}\n\nconst getJsonFromURL = url =>\n  JSON.parse(getContentsOfFileFromURL(url))\n\nclass IdeasPage extends React.Component {\n  constructor() {\n    super()\n\n    this.ideas = getJsonFromURL(URLS.IDEAS_FILE)\n    this.supervisors = getJsonFromURL(URLS.SUPERVISORS_FILE)\n\n    // this.supervisors = this.supervisors\n    // .map(each => {\n    //   // Commented out because it is very slow :(\n\n    //   /*const githubUser = each.github ?\n    //     getJsonFromURL(`https://api.github.com/users/${each.github}`) :\n    //     null*/\n\n    //   const githubUser = null\n\n    //   const picture = githubUser ? githubUser.avatar_url : null\n    //   return { ...each, pictureUrl: picture }\n    // })\n\n    this.state = {\n      ideasToDisplay: this.ideas,\n      showDetailedIdeaView: false,\n      ideaToShowInDetailedView: null\n    }\n\n  }\n\n  showIdea(idea) {\n    this.setState({\n      showDetailedIdeaView: true,\n      ideaToShowInDetailedView: idea\n    })\n  }\n\n  closeDetailedIdeaView() {\n    this.setState({\n      showDetailedIdeaView: false\n    })\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <h1>Project Ideas</h1>\n        {\n          chunk(this.ideas, 5).map((chunk, i) =>\n            <IdeasGrid key={i}>\n              {\n                chunk.map((idea, i) =>\n                  <IdeaCard\n                    key={i}\n                    projectLogo={idea.img}\n                    projectName={idea.title}\n                    projectDescription={idea.goal}\n                    onClick={() => this.showIdea(idea)}\n                  />\n                )\n              }\n            </IdeasGrid>\n          )\n        }\n        <IdeaModal\n          open={this.state.showDetailedIdeaView}\n          onClose={() => this.closeDetailedIdeaView()}\n          idea={this.state.ideaToShowInDetailedView}\n          translations={translationsEN}\n        />\n      </div>\n    )\n  }\n}\n\nexport function chunk(list, n) {\n  const copy = Array.from(list)\n  const result = []\n  while (copy.length) {\n    result.push(copy.splice(0, n))\n  }\n  return result\n}\n\nconst translationsEN = {\n  'context': 'Context',\n  'goal': 'Goal',\n  'mentors': 'Mentors',\n  'look': 'Look this project in',\n  'skills': 'Skills',\n  'required': 'Required',\n  'preferred': 'Preferred',\n  'timeSize': 'Size',\n  'expectedTime': '175 ~ 350 hour.',\n  'difficulty': 'Difficulty',\n  'Beginner': 'Beginner',\n  'Intermediate': 'Intermediate',\n  'Advanced': 'Advanced',\n}\n\nexport default IdeasPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}